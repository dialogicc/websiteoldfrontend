<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            min-height: 100vh;
        }

        .top-bar {
            background-color: #333;
            color: white;
            padding: 10px;
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            /* Anpinnen an der oberen Seite des Viewports */
            z-index: 100;
            /* Optional, um sicherzustellen, dass die Leiste über anderen Inhalten liegt */
        }

        .top-bar ul {
            list-style: none;
            display: flex;
            margin: 0;
            padding: 0;
            justify-content: center;
            /* Align the links to the center */
            flex-grow: 1;
            /* Make the links take up available space */
        }

        .top-bar li {
            margin: 0 10px;
        }

        .top-bar a {
            color: white;
            text-decoration: none;
        }

        .container {
            background-color: #ffffff;
            border-radius: 5px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            text-align: center;
        }

        h1 {
            margin-bottom: 20px;
        }

        ul {
            list-style: none;
            padding: 0;
            text-align: left;
            margin-bottom: 10px;
        }

        li {
            padding: 5px;
            border-bottom: 1px solid #ccc;
        }





        form {
            text-align: left;
        }

        label {
            display: block;
            font-weight: bold;
            margin-top: 10px;
        }

        .star-rating {
            text-align: center;
            font-size: 20px;
            color: #ccc;
        }

        .star-container {
            display: inline-block;

            margin: 10px 0;
            /* Abstand oben und unten */
        }

        .star {
            position: relative;
            z-index: 0;
            transition: color 0.4s;
            display: inline-block;
            margin: 0 3px;
            /* Weniger Platz zwischen den Sternen */
            font-size: 20px;
            color: #bbb;
        }

        .half::before {
            content: "\9733";
            /* gefüllter Stern */
            position: absolute;
            z-index: 1;
            overflow: hidden;
            height: 100%;
            white-space: nowrap;
            color: gold;
            left: 0;
            /* Beginnt am linken Rand */
            top: 0;
            /* Beginnt am oberen Rand */
        }



        .star.active {
            color: gold;
        }

        .star:hover {
            color: gold;
        }




        .button-container {
            display: flex;
            justify-content: center;
            /* Zentriert den Inhalt horizontal */
            align-items: center;
            /* Zentriert den Inhalt vertikal */
            margin-top: 20px;
        }

        .button-container form {
            text-align: left;
            /* Zurücksetzen auf linkbündigen Text für das Formular */
        }

        .button-container form button {
            margin: 0;
            /* Zurücksetzen des Margin-Wertes für den Button */
        }

        .half {
            position: relative;
        }

        .star.half-10::before {
            width: 10%;
        }

        .star.half-20::before {
            width: 20%;
        }

        .star.half-30::before {
            width: 30%;
        }

        .star.half-40::before {
            width: 40%;
        }

        .star.half-50::before {
            width: 50%;
        }

        .star.half-60::before {
            width: 60%;
        }

        .star.half-70::before {
            width: 70%;
        }

        .star.half-80::before {
            width: 80%;
        }

        .star.half-90::before {
            width: 90%;
        }
    </style>

    <title>Öffentliches Benutzerprofil</title>


</head>

<body>

    <div class="top-bar">
        <ul>
            <li><a href="/users/dashboard">Dashboard</a></li>
            <li><a href="/users/userprofile">Mein Profil</a></li>
            <li><a href="/users/offers">Angebote</a></li>
            <li><a href="/users/chats">Chats</a></li>
            <li><a href="/users/settings">Einstellungen</a></li>
            <li><a href="/users/logout">Logout</a></li>
        </ul>
    </div>
    <div class="container">
        <h1>
            <%= user.vorname %>
                <%= user.nachname %>
        </h1>

        <div class="star-container">
            <span class="star">&#9733;</span>
            <span class="star">&#9733;</span>
            <span class="star">&#9733;</span>
            <span class="star">&#9733;</span>
            <span class="star">&#9733;</span>
        </div>
        <span class="rating-count">(<%= Math.round(user.zufriedenheit * 10) / 10 %>)</span>


        <div>  
            <span class="rating-count">(<%= user.bewertungsanzahl %> Bewertungen)</span>    
        </div>
        

        <div class="button-container">
            <form action="/users/follower" method="post">
                <input type="hidden" name="userID" value="<%= user.benutzerid %>">
                <input type="hidden" id="publicuser" name="publicuser" value="<%= user.benutzerid %>">
                <input type="hidden" id="userZufriedenheit" value="<%= user.zufriedenheit %>">
                <% if (userFollows) { %>
                    <button type="submit" name="action" value="unfollow">Entfolgen</button>
                    <% } else { %>
                        <button type="submit" name="action" value="follow">Folgen</button>
                        <% } %>
            </form>
        </div>



        <ul>
            <li><strong>Vorname:</strong>
                <%= user.vorname %>
            </li>
            <li><strong>Nachname:</strong>
                <%= user.nachname %>
            </li>
            <li><strong>Beitrittsdatum:</strong>
                <%= user.beitrittsdatum %>
            </li>
            <li><strong>Antwortrate:</strong>
                <%= user.antwortrate %>
            </li>
            <li><strong>Antwortzeit:</strong>
                <%= user.antwortzeit %>
            </li>
            <li><strong>Follower:</strong>
                <%= user.follower %>
            </li>
            <li><strong>Gewerblich:</strong>
                <% if (gewerbe && gewerbe.name) { %>
                    <%= gewerbe.name %>
                        <% } else { %>
                            Nein
                            <% } %>
            </li>
            <% if (gewerbe && gewerbe.name) { %>
                <li><strong>Öffnungszeiten:</strong>
                    <%= gewerbe.oeffnungszeiten %>
                </li>
                <li><strong>Website:</strong>
                    <%= gewerbe.website %>
                </li>
                <li><strong>Rechtliche Angaben:</strong>
                    <%= gewerbe.rechtlicheangaben %>
                </li>
                <li><strong>Unternehmensbeschreibung:</strong>
                    <%= gewerbe.unternehmensbeschreibung %>
                </li>
                <% } %>

                    <li></strong> <a href="/users/chat-history/<%= user.benutzerid %>">Anschreiben</a></li>
        </ul>
    </div>


</body>

<script>

    // JavaScript-Code für die Sterne
    const stars = document.querySelectorAll('.star');
    const publicUser = document.getElementById('publicuser').value;
    var activeStarsforFunction = 0;
    const userZufriedenheit = document.getElementById('userZufriedenheit').value;


    function highlightStars(satisfaction) {
    const fullStars = Math.floor(satisfaction);
    const fraction = satisfaction - fullStars; // Bruchteil des Sterns

    // Alle vorherigen Highlight-Styles entfernen
    stars.forEach(star => {
        star.classList.remove('active');
        for (let i = 10; i <= 90; i += 10) {
            star.classList.remove('half-' + i);
        }
    });

    // Sterne füllen basierend auf Zufriedenheitswert
    for (let i = 0; i < fullStars; i++) {
        stars[i].classList.add('active');
    }

    // Wenn der Bruchteil größer oder gleich 0.5 ist, füge einen weiteren Stern hinzu
    if (fraction >= 0.5) {
        stars[fullStars].classList.add('active');
    }
}







    stars.forEach((star, index) => {
        star.addEventListener('click', () => {
            const activeStars = index + 1;


            const formData = new URLSearchParams();
            formData.append("publicUser", publicUser);
            formData.append("stars", activeStars);

            const xhr = new XMLHttpRequest();
            xhr.open("POST", "/users/rating", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    // Aktion nach erfolgreichem Absenden der Bewertung
                }
            };
            xhr.send(formData);
        });

        star.addEventListener('mouseenter', () => {
            // Entferne die 'active' Klasse von allen Sternen
            stars.forEach((s, i) => {
                s.classList.remove('active');
                for (let i = 10; i <= 90; i += 10) {
                    s.classList.remove('half-' + i);
                }
            });

            // Füge der 'active' Klasse die richtige Anzahl von Sternen hinzu
            for (let i = 0; i <= index; i++) {
                stars[i].classList.add('active');
            }
        });


        star.addEventListener('mouseleave', () => {
            // Entferne die 'active' Klasse von allen Sternen
            stars.forEach((s) => {
                s.classList.remove('active');
            });

            // Hervorheben der Sterne basierend auf der Zufriedenheit
            const satisfaction = Number(userZufriedenheit);
            // Runden Sie den Wert der Zufriedenheit auf
            highlightStars(satisfaction);
        });

    });

    // Bei Seitenladung die Sterne basierend auf `userZufriedenheit` hervorheben
    document.addEventListener('DOMContentLoaded', () => {
        const satisfaction = parseFloat(document.getElementById('userZufriedenheit').value);
        highlightStars(satisfaction);
    });

</script>



</html>